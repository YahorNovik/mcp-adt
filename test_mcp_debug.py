#!/usr/bin/env python3
"""
–î–µ–±–∞–≥ —Ç–µ—Å—Ç –¥–ª—è MCP —Å–µ—Ä–≤–µ—Ä–∞
"""

import sys
import os

# –î–æ–¥–∞—î–º–æ —à–ª—è—Ö –¥–æ src –¥–ª—è —ñ–º–ø–æ—Ä—Ç—É –º–æ–¥—É–ª—ñ–≤
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

def test_import_debug():
    """–¢–µ—Å—Ç—É—î, —è–∫–∏–π –∫–æ–¥ —ñ–º–ø–æ—Ä—Ç—É—î—Ç—å—Å—è"""
    print("=" * 80)
    print("–î–ï–ë–ê–ì –¢–ï–°–¢ –Ü–ú–ü–û–†–¢–£")
    print("=" * 80)
    
    try:
        # –Ü–º–ø–æ—Ä—Ç—É—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é
        from src.tools.package_structure import get_package_structure
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ docstring
        print(f"üìã Docstring —Ñ—É–Ω–∫—Ü—ñ—ó:")
        print(f"   {get_package_structure.__doc__[:200]}...")
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–æ–¥ —Ñ—É–Ω–∫—Ü—ñ—ó
        import inspect
        source_lines = inspect.getsourcelines(get_package_structure)
        source_code = ''.join(source_lines[0])
        
        print(f"\nüîç –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–ª—é—á–æ–≤—ñ —Ä—è–¥–∫–∏:")
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ Accept –∑–∞–≥–æ–ª–æ–≤–æ–∫
        if 'application/vnd.sap.as+xml' in source_code:
            print("‚úÖ Accept –∑–∞–≥–æ–ª–æ–≤–æ–∫: –í–ò–ü–†–ê–í–õ–ï–ù–ò–ô (SAP-—Å–ø–µ—Ü–∏—Ñ—ñ—á–Ω–∏–π)")
        elif 'application/xml, application/json' in source_code:
            print("‚ùå Accept –∑–∞–≥–æ–ª–æ–≤–æ–∫: –°–¢–ê–†–ò–ô (–∑–∞–≥–∞–ª—å–Ω–∏–π)")
        else:
            print("‚ùì Accept –∑–∞–≥–æ–ª–æ–≤–æ–∫: –ù–ï–í–Ü–î–û–ú–ò–ô")
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ cookies
        if 'session.cookies' in source_code and 'cookie.name}={cookie.value}' in source_code:
            print("‚úÖ Cookies: –í–ò–ü–†–ê–í–õ–ï–ù–Ü (–∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω—ñ –±–µ–∑ –∞—Ç—Ä–∏–±—É—Ç—ñ–≤)")
        elif 'Set-Cookie' in source_code:
            print("‚ùå Cookies: –°–¢–ê–†–Ü (–∑ –∞—Ç—Ä–∏–±—É—Ç–∞–º–∏)")
        else:
            print("‚ùì Cookies: –ù–ï–í–Ü–î–û–ú–Ü")
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ
        if 'Working version using requests automatic cookie handling' in source_code:
            print("‚úÖ –ö–æ–º–µ–Ω—Ç–∞—Ä—ñ: –í–ò–ü–†–ê–í–õ–ï–ù–Ü")
        else:
            print("‚ùå –ö–æ–º–µ–Ω—Ç–∞—Ä—ñ: –°–¢–ê–†–Ü")
        
        print(f"\nüìÑ –ü–µ—Ä—à—ñ 10 —Ä—è–¥–∫—ñ–≤ —Ñ—É–Ω–∫—Ü—ñ—ó:")
        for i, line in enumerate(source_lines[0][:10]):
            print(f"   {i+1:2d}: {line.rstrip()}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_direct_call():
    """–¢–µ—Å—Ç—É—î –ø—Ä—è–º–∏–π –≤–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó"""
    print("\n" + "=" * 80)
    print("–¢–ï–°–¢ –ü–†–Ø–ú–û–ì–û –í–ò–ö–õ–ò–ö–£")
    print("=" * 80)
    
    try:
        from src.tools.package_structure import get_package_structure
        
        print("üîÑ –í–∏–∫–ª–∏–∫–∞—î–º–æ get_package_structure('ZOK_LAB')...")
        result = get_package_structure('ZOK_LAB')
        
        print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: {len(result)} –æ–±'—î–∫—Ç—ñ–≤")
        return True, len(result)
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
        return False, 0

if __name__ == "__main__":
    print("–î–µ–±–∞–≥ —Ç–µ—Å—Ç –¥–ª—è MCP —Å–µ—Ä–≤–µ—Ä–∞")
    print("–ü–µ—Ä–µ–≤—ñ—Ä—è—î, —è–∫–∏–π –∫–æ–¥ —ñ–º–ø–æ—Ä—Ç—É—î—Ç—å—Å—è")
    print("=" * 80)
    
    # –¢–µ—Å—Ç —ñ–º–ø–æ—Ä—Ç—É
    import_ok = test_import_debug()
    
    # –¢–µ—Å—Ç –≤–∏–∫–ª–∏–∫—É
    call_ok, count = test_direct_call()
    
    print("\n" + "=" * 80)
    print("–ü–Ü–î–°–£–ú–û–ö –î–ï–ë–ê–ì–£")
    print("=" * 80)
    
    if import_ok and call_ok:
        print("üéâ –ö–û–î –í–ò–ü–†–ê–í–õ–ï–ù–ò–ô –Ü –ü–†–ê–¶–Æ–Ñ!")
        print(f"üì¶ –û—Ç—Ä–∏–º–∞–Ω–æ {count} –æ–±'—î–∫—Ç—ñ–≤")
        print("üí° –ü—Ä–æ–±–ª–µ–º–∞ –º–æ–∂–µ –±—É—Ç–∏ –≤ –∫–µ—à—É–≤–∞–Ω–Ω—ñ MCP —Å–µ—Ä–≤–µ—Ä–∞")
        print("üí° –°–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–∏ MCP —Å–µ—Ä–≤–µ—Ä")
    elif import_ok:
        print("‚ö†Ô∏è –ö–æ–¥ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–∏–π, –∞–ª–µ —î –ø–æ–º–∏–ª–∫–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è")
    else:
        print("‚ùå –ü—Ä–æ–±–ª–µ–º–∏ –∑ —ñ–º–ø–æ—Ä—Ç–æ–º –∫–æ–¥—É")
    
    print("=" * 80)

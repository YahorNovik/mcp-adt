#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è —á–∏—Ç–∞–Ω–Ω—è –ø–∞–∫–µ—Ç–∞ ZOK_LAB
"""

import sys
import os

# –î–æ–¥–∞—î–º–æ —à–ª—è—Ö –¥–æ src –¥–ª—è —ñ–º–ø–æ—Ä—Ç—É –º–æ–¥—É–ª—ñ–≤
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

def test_read_zok_lab_package():
    """–¢–µ—Å—Ç—É—î —á–∏—Ç–∞–Ω–Ω—è –ø–∞–∫–µ—Ç–∞ ZOK_LAB"""
    print("=" * 80)
    print("–¢–ï–°–¢ –ß–ò–¢–ê–ù–ù–Ø –ü–ê–ö–ï–¢–ê ZOK_LAB")
    print("=" * 80)
    
    try:
        # –Ü–º–ø–æ—Ä—Ç—É—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –¥–ª—è —á–∏—Ç–∞–Ω–Ω—è –ø–∞–∫–µ—Ç—ñ–≤
        from src.tools.package_structure import get_package_structure
        
        package_name = "ZOK_LAB"
        print(f"üîÑ –ß–∏—Ç–∞—î–º–æ –ø–∞–∫–µ—Ç: {package_name}")
        
        # –í–∏–∫–ª–∏–∫–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é
        result = get_package_structure(package_name)
        
        print(f"\n‚úÖ –£–°–ü–Ü–®–ù–û –ü–†–û–ß–ò–¢–ê–ù–û –ü–ê–ö–ï–¢!")
        print(f"üì¶ –ö—ñ–ª—å–∫—ñ—Å—Ç—å –æ–±'—î–∫—Ç—ñ–≤: {len(result)}")
        
        if result:
            print(f"\nüìã –û–±'—î–∫—Ç–∏ –≤ –ø–∞–∫–µ—Ç—ñ ZOK_LAB:")
            print("-" * 80)
            
            # –ì—Ä—É–ø—É—î–º–æ –ø–æ —Ç–∏–ø–∞—Ö
            types_dict = {}
            for obj in result:
                obj_type = obj.get('OBJECT_TYPE', 'Unknown')
                if obj_type not in types_dict:
                    types_dict[obj_type] = []
                types_dict[obj_type].append(obj)
            
            # –í–∏–≤–æ–¥–∏–º–æ –ø–æ —Ç–∏–ø–∞—Ö
            for obj_type in sorted(types_dict.keys()):
                objects = types_dict[obj_type]
                print(f"\nüîπ {obj_type} ({len(objects)} –æ–±'—î–∫—Ç—ñ–≤):")
                for obj in objects:
                    name = obj.get('OBJECT_NAME', 'No name')
                    desc = obj.get('OBJECT_DESCRIPTION', 'No description')
                    uri = obj.get('OBJECT_URI', 'No URI')
                    print(f"   ‚Ä¢ {name} - {desc}")
                    print(f"     URI: {uri}")
            
            print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–∏–ø–∞—Ö:")
            for obj_type, objects in sorted(types_dict.items()):
                print(f"   {obj_type}: {len(objects)}")
        
        return True, result
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —á–∏—Ç–∞–Ω–Ω—ñ –ø–∞–∫–µ—Ç–∞: {e}")
        import traceback
        traceback.print_exc()
        return False, None

if __name__ == "__main__":
    print("–¢–µ—Å—Ç —á–∏—Ç–∞–Ω–Ω—è –ø–∞–∫–µ—Ç–∞ ZOK_LAB")
    print("–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–∏–π package_structure.py")
    print("=" * 80)
    
    # –¢–µ—Å—Ç —á–∏—Ç–∞–Ω–Ω—è –ø–∞–∫–µ—Ç–∞
    success, result = test_read_zok_lab_package()
    
    print("\n" + "=" * 80)
    print("–ü–Ü–î–°–£–ú–û–ö")
    print("=" * 80)
    
    if success and result:
        print("üéâ –ü–ê–ö–ï–¢ ZOK_LAB –£–°–ü–Ü–®–ù–û –ü–†–û–ß–ò–¢–ê–ù–û!")
        print(f"üì¶ –ó–Ω–∞–π–¥–µ–Ω–æ {len(result)} –æ–±'—î–∫—Ç—ñ–≤")
        print("‚úÖ MCP —Å–µ—Ä–≤–µ—Ä –ø—Ä–∞—Ü—é—î –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
    else:
        print("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –ø—Ä–æ—á–∏—Ç–∞—Ç–∏ –ø–∞–∫–µ—Ç")
    
    print("=" * 80)
